CREATE TABLE BANK(
    COS_ID NUMBER PRIMARY KEY,
    COS_NAME VARCHAR2(20) NOT NULL,
    COS_BK VARCHAR2(20) NOT NULL,
    MONEY NUMBER NOT NULL,
    TOTAL_MONEY NUMBER DEFAULT 0
    );
ALTER TABLE BANK DROP COLUMN COS_BK_NUM;

CREATE SEQUENCE BK_SEQ
START WITH 200
INCREMENT BY 1;

INSERT INTO BANK VALUES(BK_SEQ.NEXTVAL, '황인태', '카카오뱅크',0, DEFALUT);
INSERT INTO BANK VALUES(BK_SEQ.NEXTVAL, '이주찬', '토스뱅크', 0, 1000000);
INSERT INTO BANK VALUES(BK_SEQ.NEXTVAL, '남재현', '우리은행', 0, 1500000);
INSERT INTO BANK VALUES(BK_SEQ.NEXTVAL, '유상현', '신한은행',0, 2000000);
INSERT INTO BANK VALUES(BK_SEQ.NEXTVAL, '김동기', '농협은행',0, 2300000);
INSERT INTO BANK VALUES(BK_SEQ.NEXTVAL, '조현민', '신한은행',0, 2500000);
INSERT INTO BANK VALUES(BK_SEQ.NEXTVAL, '봉문종', '기업은행',0, 2700000);


CREATE TABLE BANK_DEF(
      TRAN_NUM NUMBER PRIMARY KEY,
      COS_ID NUMBER REFERENCES BANK,
      TRAN_DATE DATE DEFAULT SYSDATE NOT NULL,
      TRAN_MONEY NUMBER NOT NULL,
      STATUS CHAR(6) CHECK(STATUS IN('입금','출금'))
      );
    

CREATE OR REPLACE TRIGGER BK_TG
AFTER INSERT ON BANK_DEF
FOR EACH ROW
BEGIN
    IF (:NEW.STATUS = '입금')
    THEN UPDATE BANK
         SET TOTAL_MONEY = TOTAL_MONEY + :NEW.TRAN_MONEY
         WHERE COS_ID = :NEW.COS_ID;
    ELSE
         UPDATE BANK
         SET TOTAL_MONEY = TOTAL_MONEY - :NEW.TRAN_MONEY
         WHERE COS_ID = :NEW.COS_ID;
    END IF;
END;
/
CREATE SEQUENCE SEQ_BANK_DEF
START WITH 100
INCREMENT BY 1;

INSERT INTO BANK_DEF
VALUES(SEQ_BANK_DEF.NEXTVAL,200,SYSDATE,560000, '입금');
        




