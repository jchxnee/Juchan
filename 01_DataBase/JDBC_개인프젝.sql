CREATE TABLE RESERVATION (
    CID VARCHAR2(20) NOT NULL,           
    CNAME VARCHAR2(10) NOT NULL,          
    CDATE DATE NOT NULL,                
    CTIME VARCHAR2(10) NOT NULL,           
    COUNT INT NOT NULL CHECK (COUNT > 0), 
    PHONE VARCHAR2(20) NOT NULL,           
    CREQUEST VARCHAR2(50),                 
    CONSTRAINT PK_RESERVATION PRIMARY KEY (CID), 
    CONSTRAINT UNIQUE_PHONE UNIQUE (PHONE, CDATE, CTIME), 
    CONSTRAINT CK_RESERVATION_TIME CHECK (CTIME LIKE '__:__') 
);

CREATE OR REPLACE TRIGGER TRG_CHECK_RESERVATION_DATE
BEFORE INSERT OR UPDATE ON RESERVATION
FOR EACH ROW
BEGIN
    IF :NEW.CDATE < TRUNC(SYSDATE) THEN
        RAISE_APPLICATION_ERROR(-20001, '현재보다 과거를 예약할 수 없습니다.');
    END IF;
END;
/

SELECT *
FROM RESERVATION;

SELECT * 
FROM RESERVATION 
WHERE CDATE = '2025-03-14' 
AND CTIME BETWEEN '19:00' AND '20:00';

CREATE TABLE LOGIN(
    USERID VARCHAR2(20) PRIMARY KEY,
    USERPWD VARCHAR2(20) NOT NULL,
    USERNAME VARCHAR2(10) NOT NULL,
    GENDER CHAR(1) CHECK (GENDER IN ('M', 'F')),
    PHONE VARCHAR2(20) NOT NULL,
    EMAIL VARCHAR2(50));
    
SELECT *
FROM LOGIN;


		DELETE FROM LOGIN
		WHERE USERID = 'lee' AND USERPWD = 'leej';

CREATE SEQUENCE CANCEL_REASONS_SEQ;

CREATE TABLE CANCEL_REASONS (
    ID NUMBER PRIMARY KEY,
    RESERVATION_ID VARCHAR2(20),
    CANCEL_DATE DATE DEFAULT SYSTIMESTAMP,
    CANCEL_REASON CLOB
);

CREATE OR REPLACE TRIGGER CANCEL_REASONS_TRIGGER
BEFORE INSERT ON CANCEL_REASONS
FOR EACH ROW
BEGIN
    SELECT CANCEL_REASONS_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
END;
/

DELETE 
FROM CANCEL_REASONS;
    

