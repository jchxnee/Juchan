DROP SEQUENCE STORE_SALES_NO;
DROP SEQUENCE STORE_ID;
DROP SEQUENCE EMP_NO;
DROP SEQUENCE BOARD_NO;
DROP SEQUENCE ATTENDANCE_NO;
DROP SEQUENCE STORAGE_NO;
DROP SEQUENCE STOCK_NO;
DROP SEQUENCE CATEGORY_NO;
DROP SEQUENCE PRODUCT_NO;
DROP SEQUENCE CLIENT_ID;

DROP TABLE STOCK_PRODUCT CASCADE CONSTRAINTS;
DROP TABLE INVENTORY CASCADE CONSTRAINTS;
DROP TABLE PRODUCT CASCADE CONSTRAINTS;
DROP TABLE CLIENT CASCADE CONSTRAINTS;
DROP TABLE CATEGORY CASCADE CONSTRAINTS;
DROP TABLE STOCK CASCADE CONSTRAINTS;
DROP TABLE STORAGE CASCADE CONSTRAINTS;
DROP TABLE ATTENDANCE CASCADE CONSTRAINTS;
DROP TABLE BOARD CASCADE CONSTRAINTS;
DROP TABLE EMPLOYEE CASCADE CONSTRAINTS;
DROP TABLE STORE_SALES CASCADE CONSTRAINTS;
DROP TABLE STORE CASCADE CONSTRAINTS;


-- 매장 테이블
CREATE TABLE STORE (
    STORE_ID VARCHAR2(20) NOT NULL PRIMARY KEY,  -- 매장 ID
    STORE_NAME VARCHAR2(20) NOT NULL,            -- 매장 이름
    STORE_PHONE VARCHAR2(20),                    -- 매장 연락처
    STORE_ADDRESS VARCHAR2(250) NOT NULL         -- 매장 주소
);

COMMENT ON TABLE STORE IS '매장';
COMMENT ON COLUMN STORE.STORE_ID IS '매장 ID';
COMMENT ON COLUMN STORE.STORE_NAME IS '매장 이름';
COMMENT ON COLUMN STORE.STORE_PHONE IS '매장 연락처';
COMMENT ON COLUMN STORE.STORE_ADDRESS IS '매장 주소';

-- 매출 테이블
CREATE TABLE STORE_SALES (
    STORE_SALES_NO NUMBER NOT NULL PRIMARY KEY,  -- 매장 매출 고유 번호
    STORE_ID VARCHAR2(20) NOT NULL,              -- 매장 ID (외래키)
    DAY_SALES NUMBER,                            -- 일일 매출액
    SALES_DATE DATE,                             -- 매출 발생 날짜
    MONTH_SALES NUMBER,                          -- 월 매출액
    SALES_MONTH DATE,                            -- 매출 연월
    CONSTRAINT FK_STORE_SALES FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID)
);

COMMENT ON TABLE STORE_SALES IS '매장 매출';
COMMENT ON COLUMN STORE_SALES.STORE_SALES_NO IS '매장 매출 고유 번호';
COMMENT ON COLUMN STORE_SALES.STORE_ID IS '매장 ID';
COMMENT ON COLUMN STORE_SALES.DAY_SALES IS '하루 매출액';
COMMENT ON COLUMN STORE_SALES.SALES_DATE IS '매출일자';
COMMENT ON COLUMN STORE_SALES.MONTH_SALES IS '월별 매출액';
COMMENT ON COLUMN STORE_SALES.SALES_MONTH IS '매출월자';

-- 직원 테이블
CREATE TABLE MEMBER (
    EMP_NO NUMBER NOT NULL PRIMARY KEY,      -- 직원 고유 번호
    STORE_ID VARCHAR2(20),          -- 매장 ID (외래키)
    MEM_ID VARCHAR2(20) NOT NULL UNIQUE,         -- 계정 아이디
    MEM_PWD VARCHAR2(250) NOT NULL,              -- 계정 비밀번호
    MEM_NAME VARCHAR2(20) NOT NULL,              -- 직원 이름
    PHONE VARCHAR2(20) NOT NULL,             -- 연락처
    POSITION VARCHAR2(20),                   -- 직급/권한
    STATUS CHAR,                             -- 회원가입 승인 여부
    CREATE_DATE DATE DEFAULT SYSDATE NOT NULL, -- 가입일
    MODIFY_DATE DATE DEFAULT SYSDATE,        -- 정보 수정일
    HIRE_DATE DATE,                          -- 입사일
    SALARY NUMBER,                           -- 급여
    CONSTRAINT FK_MEMBER_STORE FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID)
);

COMMENT ON TABLE MEMBER IS '직원';
COMMENT ON COLUMN MEMBER.EMP_NO IS '직원 고유 번호';
COMMENT ON COLUMN MEMBER.STORE_ID IS '매장 ID';
COMMENT ON COLUMN MEMBER.MEM_ID IS '아이디';
COMMENT ON COLUMN MEMBER.MEM_PWD IS '비밀번호';
COMMENT ON COLUMN MEMBER.MEM_NAME IS '이름';
COMMENT ON COLUMN MEMBER.PHONE IS '연락처';
COMMENT ON COLUMN MEMBER.POSITION IS '직급/권한';
COMMENT ON COLUMN MEMBER.STATUS IS '승인 여부';
COMMENT ON COLUMN MEMBER.CREATE_DATE IS '가입일';
COMMENT ON COLUMN MEMBER.MODIFY_DATE IS '정보 수정일';
COMMENT ON COLUMN MEMBER.HIRE_DATE IS '입사일';
COMMENT ON COLUMN MEMBER.SALARY IS '급여';

-- 공지사항 테이블
CREATE TABLE BOARD (
    BOARD_NO NUMBER NOT NULL PRIMARY KEY,  -- 공지사항 번호
    EMP_NO NUMBER NOT NULL,                -- 작성 직원 번호 (외래키)
    BOARD_TITLE VARCHAR2(100),             -- 제목
    BOARD_CONTENT VARCHAR2(500),           -- 내용
    CREATE_DATE DATE,                      -- 작성일자
    BOARD_TYPE NUMBER NOT NULL,            -- 공지사항 유형 (1: 일반, 2: 관리자)
    CONSTRAINT FK_BOARD_MEMBER FOREIGN KEY (EMP_NO) REFERENCES MEMBER(EMP_NO)
);

COMMENT ON TABLE BOARD IS '공지사항';
COMMENT ON COLUMN BOARD.BOARD_NO IS '공지사항 번호';
COMMENT ON COLUMN BOARD.EMP_NO IS '작성 직원 번호';
COMMENT ON COLUMN BOARD.BOARD_TITLE IS '제목';
COMMENT ON COLUMN BOARD.BOARD_CONTENT IS '내용';
COMMENT ON COLUMN BOARD.CREATE_DATE IS '작성일자';
COMMENT ON COLUMN BOARD.BOARD_TYPE IS '공지사항 타입';

-- 출퇴근 기록 테이블
CREATE TABLE ATTENDANCE (
    ATTENDANCE_NO NUMBER NOT NULL PRIMARY KEY,  -- 출퇴근 고유 번호
    EMP_NO NUMBER NOT NULL,                     -- 직원 번호 (외래키)
    CLOCK_IN DATE,                               -- 출퇴근 시간
    STATUS CHAR(1),                              -- 출근/퇴근 상태
    CONSTRAINT FK_ATTENDANCE_MEMBER FOREIGN KEY (EMP_NO) REFERENCES MEMBER(EMP_NO)
);

COMMENT ON TABLE ATTENDANCE IS '출퇴근 기록';
COMMENT ON COLUMN ATTENDANCE.ATTENDANCE_NO IS '출퇴근 고유 번호';
COMMENT ON COLUMN ATTENDANCE.EMP_NO IS '직원 번호';
COMMENT ON COLUMN ATTENDANCE.CLOCK_IN IS '출퇴근 시간';
COMMENT ON COLUMN ATTENDANCE.STATUS IS '출퇴근 상태';

-- 창고 테이블
CREATE TABLE STORAGE (
    STORAGE_NO NUMBER NOT NULL PRIMARY KEY,  -- 창고번호
    STORAGE_LOCATION VARCHAR2(20) NOT NULL,  -- 창고위치명
    ABLE_AMOUNT NUMBER NOT NULL,             -- 보관 가능 수량
    CURRENT_AMOUNT NUMBER DEFAULT 0 NOT NULL	   -- 현재 보관 수량
);

COMMENT ON TABLE STORAGE IS '창고 ';
COMMENT ON COLUMN STORAGE.STORAGE_NO IS '창고번호';
COMMENT ON COLUMN STORAGE.STORAGE_LOCATION IS '창고 위치명';
COMMENT ON COLUMN STORAGE.ABLE_AMOUNT IS '보관 가능 수량';
COMMENT ON COLUMN STORAGE.CURRENT_AMOUNT IS '현재 보관 수량';

-- 입출고 테이블
CREATE TABLE STOCK (
    STOCK_NO NUMBER NOT NULL PRIMARY KEY,  -- 입출고번호
    STOCK_EMP VARCHAR2(20) NOT NULL,       -- 요청자
    STOCK_DATE DATE DEFAULT SYSDATE NOT NULL, -- 작성일
    EXP_DATE DATE NOT NULL,                -- 입출고예정일
    MODIFY_DATE DATE DEFAULT SYSDATE,      -- 상태변경일
    STOCK_STATUS VARCHAR2(20) NOT NULL,    -- 입출고 상태 (입고등록, 입고검수완료, 출고요청, 출고완료 등)
    STATUS CHAR(1) DEFAULT 'Y' NOT NULL    -- 상태 (활성화 여부)
);

COMMENT ON TABLE STOCK IS '입출고';
COMMENT ON COLUMN STOCK.STOCK_NO IS '입출고번호';
COMMENT ON COLUMN STOCK.STOCK_EMP IS '요청자';
COMMENT ON COLUMN STOCK.STOCK_DATE IS '작성일';
COMMENT ON COLUMN STOCK.EXP_DATE IS '입출고예정일';
COMMENT ON COLUMN STOCK.MODIFY_DATE IS '상태변경일';
COMMENT ON COLUMN STOCK.STOCK_STATUS IS '입출고 상태';
COMMENT ON COLUMN STOCK.STATUS IS '상태';

-- 카테고리 테이블
CREATE TABLE CATEGORY (
    CATEGORY_NO NUMBER NOT NULL PRIMARY KEY,  -- 카테고리번호
    CATEGORY_NAME VARCHAR2(20) NOT NULL,      -- 카테고리명
    STATUS CHAR(1) NOT NULL          -- 카테고리 상태 (Y/N)
);

COMMENT ON TABLE CATEGORY IS '카테고리';
COMMENT ON COLUMN CATEGORY.CATEGORY_NO IS '카테고리번호';
COMMENT ON COLUMN CATEGORY.CATEGORY_NAME IS '카테고리명';
COMMENT ON COLUMN CATEGORY.STATUS IS '상태';

-- 입고처(거래처) 테이블
CREATE TABLE CLIENT (
    CLIENT_ID NUMBER NOT NULL PRIMARY KEY,   -- 입고처 ID
    CLIENT_NAME VARCHAR2(20) NOT NULL,       -- 입고처명
    CLIENT_CEO VARCHAR2(20) NOT NULL,        -- 입고처대표명
    CLIENT_PHONE VARCHAR2(20) NOT NULL,      -- 입고처연락처
    CLIENT_ADDRESS VARCHAR2(50) NOT NULL,    -- 입고처주소
    BUSINESS_NUMBER VARCHAR2(20) NOT NULL,   -- 사업자번호
    CLIENT_FAX VARCHAR2(20) NULL             -- FAX번호
);

COMMENT ON TABLE CLIENT IS '입고처';
COMMENT ON COLUMN CLIENT.CLIENT_ID IS '입고처 ID';
COMMENT ON COLUMN CLIENT.CLIENT_NAME IS '입고처명';
COMMENT ON COLUMN CLIENT.CLIENT_CEO IS '입고처대표명';
COMMENT ON COLUMN CLIENT.CLIENT_PHONE IS '입고처연락처';
COMMENT ON COLUMN CLIENT.CLIENT_ADDRESS IS '입고처주소';
COMMENT ON COLUMN CLIENT.BUSINESS_NUMBER IS '사업자번호';
COMMENT ON COLUMN CLIENT.CLIENT_FAX IS 'FAX번호';

-- 상품 테이블
CREATE TABLE PRODUCT (
    PRODUCT_NO NUMBER NOT NULL PRIMARY KEY,  -- 상품번호
    CLIENT_ID NUMBER NOT NULL,               -- 입고처 ID (외래키)
    CATEGORY_NO NUMBER NOT NULL,             -- 카테고리번호 (외래키)
    PRODUCT_NAME VARCHAR2(50) NOT NULL,      -- 상품명
    COLOR VARCHAR2(20) NULL,                 -- 색상
    PRODUCT_SIZE NUMBER NULL,                        -- 사이즈
    REGISTRATION_DATE DATE DEFAULT SYSDATE NOT NULL, -- 제품등록일
    STOCK_IN_PRICE NUMBER NULL,              -- 구매가격
    STOCK_OUT_PRICE NUMBER NULL,             -- 판매가격
    IMAGE_URL VARCHAR2(100) NULL,            -- 신발 이미지 URL
    STATUS CHAR DEFAULT 'Y' NOT NULL,        -- 판매여부 (Y/N)
    CONSTRAINT FK_PRODUCT_CLIENT FOREIGN KEY (CLIENT_ID) REFERENCES CLIENT(CLIENT_ID),
    CONSTRAINT FK_PRODUCT_CATEGORY FOREIGN KEY (CATEGORY_NO) REFERENCES CATEGORY(CATEGORY_NO)
);

COMMENT ON TABLE PRODUCT IS '상품';
COMMENT ON COLUMN PRODUCT.PRODUCT_NO IS '상품번호';
COMMENT ON COLUMN PRODUCT.CLIENT_ID IS '입고처 ID';
COMMENT ON COLUMN PRODUCT.CATEGORY_NO IS '카테고리번호';
COMMENT ON COLUMN PRODUCT.PRODUCT_NAME IS '상품명';
COMMENT ON COLUMN PRODUCT.COLOR IS '색상';
COMMENT ON COLUMN PRODUCT.PRODUCT_SIZE IS '사이즈';
COMMENT ON COLUMN PRODUCT.REGISTRATION_DATE IS '제품등록일';
COMMENT ON COLUMN PRODUCT.STOCK_IN_PRICE IS '구매가격';
COMMENT ON COLUMN PRODUCT.STOCK_OUT_PRICE IS '판매가격';
COMMENT ON COLUMN PRODUCT.IMAGE_URL IS '신발 이미지 URL';
COMMENT ON COLUMN PRODUCT.STATUS IS '판매여부';

-- 재고 테이블
CREATE TABLE INVENTORY (
    STORAGE_NO NUMBER NOT NULL,        -- 창고번호 (외래키)
    PRODUCT_NO NUMBER NOT NULL,        -- 상품번호 (외래키)
    QUANTITY NUMBER NULL,              -- 수량
    STOCK_IN_DATE DATE NULL,           -- 마지막 입고일자
    STOCK_OUT_DATE DATE NULL,          -- 마지막 출고일자
    CONSTRAINT FK_INVENTORY_STORAGE FOREIGN KEY (STORAGE_NO) REFERENCES STORAGE(STORAGE_NO),
    CONSTRAINT FK_INVENTORY_PRODUCT FOREIGN KEY (PRODUCT_NO) REFERENCES PRODUCT(PRODUCT_NO)
);

COMMENT ON TABLE INVENTORY IS '재고';
COMMENT ON COLUMN INVENTORY.STORAGE_NO IS '창고번호';
COMMENT ON COLUMN INVENTORY.PRODUCT_NO IS '상품번호';
COMMENT ON COLUMN INVENTORY.QUANTITY IS '수량';
COMMENT ON COLUMN INVENTORY.STOCK_IN_DATE IS '마지막 입고일자';
COMMENT ON COLUMN INVENTORY.STOCK_OUT_DATE IS '마지막 출고일자';

-- 입출고 상품 테이블
CREATE TABLE STOCK_PRODUCT (
    STOCK_NO NUMBER NOT NULL,          -- 입출고번호 (외래키)
    PRODUCT_NO NUMBER NOT NULL,        -- 상품번호 (외래키)
    STORAGE_NO NUMBER NOT NULL,        -- 창고번호 (외래키)
    COUNT NUMBER NOT NULL,       -- 수량
    TAXATION CHAR(1) DEFAULT 'Y' NOT NULL, -- 과세여부
    CONSTRAINT FK_STOCK_PRODUCT FOREIGN KEY (STOCK_NO) REFERENCES STOCK(STOCK_NO),
    CONSTRAINT FK_STOCK_PRODUCT_PROD FOREIGN KEY (PRODUCT_NO) REFERENCES PRODUCT(PRODUCT_NO),
    CONSTRAINT FK_STOCK_PRODUCT_WARE FOREIGN KEY (STORAGE_NO) REFERENCES STORAGE(STORAGE_NO)
);

COMMENT ON TABLE STOCK_PRODUCT IS '입출고 상품';
COMMENT ON COLUMN STOCK_PRODUCT.STOCK_NO IS '입출고번호';
COMMENT ON COLUMN STOCK_PRODUCT.PRODUCT_NO IS '상품번호';
COMMENT ON COLUMN STOCK_PRODUCT.STORAGE_NO IS '창고번호';
COMMENT ON COLUMN STOCK_PRODUCT.COUNT IS '수량';
COMMENT ON COLUMN STOCK_PRODUCT.TAXATION IS '과세여부';


CREATE SEQUENCE STORE_SALES_NO NOCACHE;
CREATE SEQUENCE STORE_ID INCREMENT BY 1 START WITH 100001 MINVALUE 100001 MAXVALUE 999999 NOCACHE;
CREATE SEQUENCE EMP_NO NOCACHE;
CREATE SEQUENCE BOARD_NO NOCACHE;
CREATE SEQUENCE ATTENDANCE_NO NOCACHE;
CREATE SEQUENCE STORAGE_NO NOCACHE;
CREATE SEQUENCE STOCK_NO INCREMENT BY 1 START WITH 100001 MINVALUE 100001 MAXVALUE 999999 NOCACHE;
CREATE SEQUENCE CATEGORY_NO NOCACHE;
CREATE SEQUENCE PRODUCT_NO INCREMENT BY 1 START WITH 100001 MINVALUE 100001 MAXVALUE 999999 NOCACHE;
CREATE SEQUENCE CLIENT_ID NOCACHE;


-- 더미 데이터 4개 삽입
INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_PHONE, STORE_ADDRESS)
VALUES ('1', '하남점', '02-1234-5678', '서울시 강남구 테헤란로 123');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_PHONE, STORE_ADDRESS)
VALUES ('2', '강남점', '02-9876-5432', '서울시 종로구 세종로 45');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_PHONE, STORE_ADDRESS)
VALUES ('3', '역삼점', '031-1122-3344', '경기도 수원시 영통구 678');

INSERT INTO STORE (STORE_ID, STORE_NAME, STORE_PHONE, STORE_ADDRESS)
VALUES ('4', '선릉점', '042-555-1234', '대전광역시 중구 대흥로 22');

INSERT INTO MEMBER (EMP_NO, STORE_ID, MEM_ID, MEM_PWD, MEM_NAME, PHONE, POSITION, STATUS, CREATE_DATE, MODIFY_DATE, HIRE_DATE, SALARY)
VALUES (1, '1', 'admin', 'password123', '관리자', '010-1234-5678', 'Manager', 'Y', SYSDATE, SYSDATE, TO_DATE('2023-01-10', 'YYYY-MM-DD'), 5000000);

INSERT INTO MEMBER (EMP_NO, STORE_ID, MEM_ID, MEM_PWD, MEM_NAME, PHONE, POSITION, STATUS, CREATE_DATE, MODIFY_DATE, HIRE_DATE, SALARY)
VALUES (2, '2', 'user01', 'userpass01', '김철수', '010-9876-5432', 'Staff', 'Y', SYSDATE, SYSDATE, TO_DATE('2023-05-15', 'YYYY-MM-DD'), 3200000);

INSERT INTO MEMBER (EMP_NO, STORE_ID, MEM_ID, MEM_PWD, MEM_NAME, PHONE, POSITION, STATUS, CREATE_DATE, MODIFY_DATE, HIRE_DATE, SALARY)
VALUES (3, '3', 'user02', 'userpass02', '이영희', '010-1111-2222', 'Staff', 'N', SYSDATE, SYSDATE, TO_DATE('2024-02-01', 'YYYY-MM-DD'), 3000000);

commit;

SELECT * FROM MEMBER WHERE MEM_ID = 'admin' AND MEM_PWD = 'password123' AND STATUS = 'Y';